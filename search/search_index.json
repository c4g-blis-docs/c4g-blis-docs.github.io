{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home \u00b6 What this repo is for? \u00b6 Starting from Spring 2022, BLIS workgroup decides to move all documentation regarding BLIS into one place for accessibility, maintainability and readability. In the current plan, this repo will includes following assets: User Guide Frequently Asked Questions Developer guide This webpage also allows you to conduct search through the docs. Contributing to this repo: \u00b6 Recommendation readings: \u00b6 We are maintaining this webpage via github page . Using mkdocs to generate static sites from markdown files under /docs . You can learn more from this tutorial . Develop & deploy steps: \u00b6 If you are contributing to this repo, please follow the steps of: - Add your documentations under /docs - Before submitting, you can test the new changes offline running mkdocs serve . This will serve the site in your localhost. Default accessible at port 8000 . - After merge into the main, you can run mkdocs gh-deploy --force under the main branch. This will deploy the changes to the actual github page website.","title":"Home"},{"location":"#home","text":"","title":"Home"},{"location":"#what-this-repo-is-for","text":"Starting from Spring 2022, BLIS workgroup decides to move all documentation regarding BLIS into one place for accessibility, maintainability and readability. In the current plan, this repo will includes following assets: User Guide Frequently Asked Questions Developer guide This webpage also allows you to conduct search through the docs.","title":"What this repo is for?"},{"location":"#contributing-to-this-repo","text":"","title":"Contributing to this repo:"},{"location":"#recommendation-readings","text":"We are maintaining this webpage via github page . Using mkdocs to generate static sites from markdown files under /docs . You can learn more from this tutorial .","title":"Recommendation readings:"},{"location":"#develop-deploy-steps","text":"If you are contributing to this repo, please follow the steps of: - Add your documentations under /docs - Before submitting, you can test the new changes offline running mkdocs serve . This will serve the site in your localhost. Default accessible at port 8000 . - After merge into the main, you can run mkdocs gh-deploy --force under the main branch. This will deploy the changes to the actual github page website.","title":"Develop &amp; deploy steps:"},{"location":"faq/","text":"Frequently Asked Questions \u00b6 Q: I'm using BLIS for Windows and everytime I try to run the executable, it crashes! What's going on? \u00b6 A : Ensure that the zipped files from the Runtime.zip are extracted directly into the BLIS directory. They should not remain in a Runtime folder. Q: I am trying out BLIS. How do I login? \u00b6 A : Please login using the credentials: testlab1_admin/admin123 (as admin) or testlab1_tech1, testlab1_tech2/tech123 (as lab technician). Q: How do I look up a patient in our system? \u00b6 A : Navigate to the Registration tab and search for the patient by name, number, or ID. Q: How do I add a new patient? \u00b6 A : To add a new patient, navigate to the Registration tab. Do not enter anything into the search bar and click 'Search'. You will see an option to add new patient appear. Click the link to proceed. Q: How do I add a new Specimen to a patient? \u00b6 A : After pulling open the patient's profile, click the 'Register New Specimen' hyperlink on the righthand side. Q: How do I configure BLIS to upload data to the central web instance [Manager View Only]? \u00b6 A : In the Manager view, naviate to the Lab Configuration Tab, and then BLIS Online. Enter in the IP address of the BLIS server. Q: How do I change the language of BLIS? \u00b6 A : You can change the language to either the English or French version by clicking on the preferred language in the footer menu. BLIS has several language options to cater to a diverse community, and we're still working to implement our changes in all of them! Thank you for your patience. Q: I'm logged in as an admin user but I want to work as a lab technician. How do I switch to the technician interface? \u00b6 A : The Work as Technician option can be selected from the top right side of the header next to the logout button. Q: What are the different lab tests that BLIS can be used for? \u00b6 A : The lab tests that BLIS can be used for are configured by your administrator, so they vary from lab to lab. Check with you local adminstrator for more information. Q: How do I add new BLIS users to the system? \u00b6 A : An administrator can add new users. The types of users can also be configured. To add a new user, you must be logged in as an adminstrator. Go the the Lab Configuration tab and select the User Accounts option (from this page you can also add new user types, e.g. technicians or administrators. Click on Add New Account and fill out the form that pops up to add a new user. Be sure to click the Add button, not Close at the bottom of the form. permissions.","title":"Frequently Asked Questions"},{"location":"faq/#frequently-asked-questions","text":"","title":"Frequently Asked Questions"},{"location":"faq/#q-im-using-blis-for-windows-and-everytime-i-try-to-run-the-executable-it-crashes-whats-going-on","text":"A : Ensure that the zipped files from the Runtime.zip are extracted directly into the BLIS directory. They should not remain in a Runtime folder.","title":"Q: I'm using BLIS for Windows and everytime I try to run the executable, it crashes! What's going on?"},{"location":"faq/#q-i-am-trying-out-blis-how-do-i-login","text":"A : Please login using the credentials: testlab1_admin/admin123 (as admin) or testlab1_tech1, testlab1_tech2/tech123 (as lab technician).","title":"Q: I am trying out BLIS. How do I login?"},{"location":"faq/#q-how-do-i-look-up-a-patient-in-our-system","text":"A : Navigate to the Registration tab and search for the patient by name, number, or ID.","title":"Q: How do I look up a patient in our system?"},{"location":"faq/#q-how-do-i-add-a-new-patient","text":"A : To add a new patient, navigate to the Registration tab. Do not enter anything into the search bar and click 'Search'. You will see an option to add new patient appear. Click the link to proceed.","title":"Q: How do I add a new patient?"},{"location":"faq/#q-how-do-i-add-a-new-specimen-to-a-patient","text":"A : After pulling open the patient's profile, click the 'Register New Specimen' hyperlink on the righthand side.","title":"Q: How do I add a new Specimen to a patient?"},{"location":"faq/#q-how-do-i-configure-blis-to-upload-data-to-the-central-web-instance-manager-view-only","text":"A : In the Manager view, naviate to the Lab Configuration Tab, and then BLIS Online. Enter in the IP address of the BLIS server.","title":"Q: How do I configure BLIS to upload data to the central web instance [Manager View Only]?"},{"location":"faq/#q-how-do-i-change-the-language-of-blis","text":"A : You can change the language to either the English or French version by clicking on the preferred language in the footer menu. BLIS has several language options to cater to a diverse community, and we're still working to implement our changes in all of them! Thank you for your patience.","title":"Q: How do I change the language of BLIS?"},{"location":"faq/#q-im-logged-in-as-an-admin-user-but-i-want-to-work-as-a-lab-technician-how-do-i-switch-to-the-technician-interface","text":"A : The Work as Technician option can be selected from the top right side of the header next to the logout button.","title":"Q: I'm logged in as an admin user but I want to work as a lab technician. How do I switch to the technician interface?"},{"location":"faq/#q-what-are-the-different-lab-tests-that-blis-can-be-used-for","text":"A : The lab tests that BLIS can be used for are configured by your administrator, so they vary from lab to lab. Check with you local adminstrator for more information.","title":"Q: What are the different lab tests that BLIS can be used for?"},{"location":"faq/#q-how-do-i-add-new-blis-users-to-the-system","text":"A : An administrator can add new users. The types of users can also be configured. To add a new user, you must be logged in as an adminstrator. Go the the Lab Configuration tab and select the User Accounts option (from this page you can also add new user types, e.g. technicians or administrators. Click on Add New Account and fill out the form that pops up to add a new user. Be sure to click the Add button, not Close at the bottom of the form. permissions.","title":"Q: How do I add new BLIS users to the system?"},{"location":"developer_documentation/blis_cloud/","text":"Running BLIS on a Cloud Provider \u00b6 There is experimental support for running BLIS on a cloud provider in the form of a Docker container! Quick Version \u00b6 Skip this section for step-by-step instructions on getting BLIS running. You must already have an account with a cloud provider to continue, and you must create a virtual machine running a relatively modern Linux distribution. For testing, Digital Ocean and the minimum-level $5/month droplet was used. You must install Docker Engine for the Linux distro you are running. You must install Docker Compose . Either V1 ( docker-compose ) or V2 ( docker compose ) will work, but for this example, docker-compose V1 will be used. Creating a Droplet \u00b6 You can follow the instructions on DigitalOcean to create a droplet here . Any Linux distribution should work, but for the purposes of this guide, it is assumed you will use Ubuntu. After creating the droplet, make sure you either note down the root user password you set, or you have an key configured for passwordless login. Follow the instructions here to connect to the droplet via SSH . Installing Docker \u00b6 When you are SSH'd into the droplet, in the terminal, run these commands to install Docker: sudo apt-get update sudo apt-get install ca-certificates curl gnupg lsb-release curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg \\ --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg echo \\ \"deb [arch= $( dpkg --print-architecture ) \\ signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] \\ https://download.docker.com/linux/ubuntu \\ $( lsb_release -cs ) stable\" | sudo tee \\ /etc/apt/sources.list.d/docker.list > /dev/null sudo apt-get update sudo apt-get install -y docker-ce docker-ce-cli containerd.io Install Docker Compose V1: sudo curl -L \"https://github.com/docker/compose/releases/download/1.29.2/docker-compose- $( uname -s ) - $( uname -m ) \" -o /usr/local/bin/docker-compose chmod +x /usr/local/bin/docker-compose Now you're ready to run BLIS! Running BLIS \u00b6 In the DigitalOcean Droplet via SSH, clone the BLIS repository: $ git clone https://github.com/c4g-spr22-blis/BLIS.git Change to the BLIS Docker directory $ cd BLIS/docker Initialize BLIS! $ docker-compose up -d These commands will set up two containers: The app container: This contains all of the BLIS source code, as well as the Apache2 web server and PHP 5.6 runtime. The db container: This contains the MySQL 5.7 database. The files inside the docker/database/ folder are executed when the container is created, providing the seed data that the BLIS database needs to start. Accessing BLIS \u00b6 Now, BLIS should be running. You can access it by visiting a URL that looks like: http://[your droplet IP address]/ Substitute your droplet IP address above - you should have this from SSHing into it. Upgrading BLIS \u00b6 When you want to upgrade BLIS, you can follow these commands to pull the latest version of the Docker image and restart the containers: $ docker-compose down $ docker-compose pull app $ docker-compose up -d And that's it! Adding an HTTPS certificate to BLIS \u00b6 By default, BLIS will only communicate over HTTP on port 80 (see docker/docker-compose.yml for the full port configuration.) BLIS includes support for automatically retrieving and configuring a certificate from Let's Encrypt for communicating over HTTPS. However, you must already have a domain configured and pointing at the host you are running BLIS on. This process is not included in this guide. If you are using DigitalOcean, there is a guide you can use as a jumping-off point here . After your domain is pointing to your BLIS host IP address \u00b6 You will need to add the BLIS_SERVER_NAME to the docker-compose.yml configuration: services: app: # This image is automatically built and pushed from the GitHub action in .github/workflows/ folder image: \"ghcr.io/c4g-spr22-blis/blis:latest\" environment: DB_HOST: 'db' DB_PORT: '3306' DB_USER: '[blis database user here]' DB_PASS: '[blis database password here]' # Add or uncomment this line, and change the domain value to your own BLIS_SERVER_NAME: 'blis.mydomain.com' Then, (re)start BLIS: # if BLIS is running $ docker-compose down # bring the database container up first and daemonize it $ docker-compose up -d db # bring the app container up alone, syncronously, so we can see the output $ docker-compose up app Make sure there are no errors in the output. The container will attempt to read the value of BLIS_SERVER_NAME and set the appropriate ServerName directive in the Apache2 web server configuration and a message will say that it is successful. Assuming it is successful, you can quit with Ctrl-C and restart as a background process ( docker-compose up -d app ). In a separate terminal window, while BLIS is running, run the script: $ docker-compose exec app get-https-cert.sh This will verify the environment configuration seems correct and execute the certificate tool for you! Answer the questions about the domain to the best of your knowledge. Once the domain is verified and the certificate installed, you can visit your BLIS instance with an https:// URL and hopefully it just works! Troubleshooting \u00b6 There maybe a error when you call docker-compose API, the error will show similar to: root@blis-test:~/BLIS/docker#docker-compose -bash: /usr/local/bin/docker-compose: Permission denied Using a chmod +x /usr/local/bin/docker-compose will help the work.","title":"Running BLIS on a Cloud Provider"},{"location":"developer_documentation/blis_cloud/#running-blis-on-a-cloud-provider","text":"There is experimental support for running BLIS on a cloud provider in the form of a Docker container!","title":"Running BLIS on a Cloud Provider"},{"location":"developer_documentation/blis_cloud/#quick-version","text":"Skip this section for step-by-step instructions on getting BLIS running. You must already have an account with a cloud provider to continue, and you must create a virtual machine running a relatively modern Linux distribution. For testing, Digital Ocean and the minimum-level $5/month droplet was used. You must install Docker Engine for the Linux distro you are running. You must install Docker Compose . Either V1 ( docker-compose ) or V2 ( docker compose ) will work, but for this example, docker-compose V1 will be used.","title":"Quick Version"},{"location":"developer_documentation/blis_cloud/#creating-a-droplet","text":"You can follow the instructions on DigitalOcean to create a droplet here . Any Linux distribution should work, but for the purposes of this guide, it is assumed you will use Ubuntu. After creating the droplet, make sure you either note down the root user password you set, or you have an key configured for passwordless login. Follow the instructions here to connect to the droplet via SSH .","title":"Creating a Droplet"},{"location":"developer_documentation/blis_cloud/#installing-docker","text":"When you are SSH'd into the droplet, in the terminal, run these commands to install Docker: sudo apt-get update sudo apt-get install ca-certificates curl gnupg lsb-release curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg \\ --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg echo \\ \"deb [arch= $( dpkg --print-architecture ) \\ signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] \\ https://download.docker.com/linux/ubuntu \\ $( lsb_release -cs ) stable\" | sudo tee \\ /etc/apt/sources.list.d/docker.list > /dev/null sudo apt-get update sudo apt-get install -y docker-ce docker-ce-cli containerd.io Install Docker Compose V1: sudo curl -L \"https://github.com/docker/compose/releases/download/1.29.2/docker-compose- $( uname -s ) - $( uname -m ) \" -o /usr/local/bin/docker-compose chmod +x /usr/local/bin/docker-compose Now you're ready to run BLIS!","title":"Installing Docker"},{"location":"developer_documentation/blis_cloud/#running-blis","text":"In the DigitalOcean Droplet via SSH, clone the BLIS repository: $ git clone https://github.com/c4g-spr22-blis/BLIS.git Change to the BLIS Docker directory $ cd BLIS/docker Initialize BLIS! $ docker-compose up -d These commands will set up two containers: The app container: This contains all of the BLIS source code, as well as the Apache2 web server and PHP 5.6 runtime. The db container: This contains the MySQL 5.7 database. The files inside the docker/database/ folder are executed when the container is created, providing the seed data that the BLIS database needs to start.","title":"Running BLIS"},{"location":"developer_documentation/blis_cloud/#accessing-blis","text":"Now, BLIS should be running. You can access it by visiting a URL that looks like: http://[your droplet IP address]/ Substitute your droplet IP address above - you should have this from SSHing into it.","title":"Accessing BLIS"},{"location":"developer_documentation/blis_cloud/#upgrading-blis","text":"When you want to upgrade BLIS, you can follow these commands to pull the latest version of the Docker image and restart the containers: $ docker-compose down $ docker-compose pull app $ docker-compose up -d And that's it!","title":"Upgrading BLIS"},{"location":"developer_documentation/blis_cloud/#adding-an-https-certificate-to-blis","text":"By default, BLIS will only communicate over HTTP on port 80 (see docker/docker-compose.yml for the full port configuration.) BLIS includes support for automatically retrieving and configuring a certificate from Let's Encrypt for communicating over HTTPS. However, you must already have a domain configured and pointing at the host you are running BLIS on. This process is not included in this guide. If you are using DigitalOcean, there is a guide you can use as a jumping-off point here .","title":"Adding an HTTPS certificate to BLIS"},{"location":"developer_documentation/blis_cloud/#after-your-domain-is-pointing-to-your-blis-host-ip-address","text":"You will need to add the BLIS_SERVER_NAME to the docker-compose.yml configuration: services: app: # This image is automatically built and pushed from the GitHub action in .github/workflows/ folder image: \"ghcr.io/c4g-spr22-blis/blis:latest\" environment: DB_HOST: 'db' DB_PORT: '3306' DB_USER: '[blis database user here]' DB_PASS: '[blis database password here]' # Add or uncomment this line, and change the domain value to your own BLIS_SERVER_NAME: 'blis.mydomain.com' Then, (re)start BLIS: # if BLIS is running $ docker-compose down # bring the database container up first and daemonize it $ docker-compose up -d db # bring the app container up alone, syncronously, so we can see the output $ docker-compose up app Make sure there are no errors in the output. The container will attempt to read the value of BLIS_SERVER_NAME and set the appropriate ServerName directive in the Apache2 web server configuration and a message will say that it is successful. Assuming it is successful, you can quit with Ctrl-C and restart as a background process ( docker-compose up -d app ). In a separate terminal window, while BLIS is running, run the script: $ docker-compose exec app get-https-cert.sh This will verify the environment configuration seems correct and execute the certificate tool for you! Answer the questions about the domain to the best of your knowledge. Once the domain is verified and the certificate installed, you can visit your BLIS instance with an https:// URL and hopefully it just works!","title":"After your domain is pointing to your BLIS host IP address"},{"location":"developer_documentation/blis_cloud/#troubleshooting","text":"There maybe a error when you call docker-compose API, the error will show similar to: root@blis-test:~/BLIS/docker#docker-compose -bash: /usr/local/bin/docker-compose: Permission denied Using a chmod +x /usr/local/bin/docker-compose will help the work.","title":"Troubleshooting"},{"location":"developer_documentation/blis_in_devcontainer/","text":"BLIS in a Devcontainer \u00b6 Danger This is experimental! Not everything will work exactly as it does on Windows. Devcontainers are a feature of Visual Studio Code that allow you to specify your development environment as a Docker container develop inside of it as if you were running the tools on your computer directly. The c4g-blis-spr22/BLIS repository has a .devcontainer configuration already specified, so you can develop BLIS on any computer that can run Docker and Visual Studio Code. Warning Although you can run BLIS in a devcontainer, this is only for development. For running a real copy of BLIS, you should still use the traditional Windows-based approach. Prerequisites \u00b6 git Visual Studio Code Docker: on Mac and Windows, Docker Desktop will work Instructions \u00b6 Clone the BLIS repository to your computer: $ git clone https://github.com/c4g-spr22-blis/BLIS.git Open the folder in Visual Studio Code A pop-up that says something like \"This folder contains a devcontainer configuration\" will appear. Click the button to open the folder in a container. If that does not appear, open the command palette (Ctrl-Shift-P or Cmd-Shift-P) and find \"Open folder in container\" and select the BLIS folder. Once the container is started, the ports should forward automatically. You can see apache2 running if you click the \"Ports\" tab on the bottom (if the bottom panel is not open, use Ctrl-` (backtick) to open it) You can then browse BLIS in your normal browser by visiting http://localhost:80 (substituting 80 for another port, depending on what port VS Code has mapped to apache2.)","title":"BLIS in a Devcontainer"},{"location":"developer_documentation/blis_in_devcontainer/#blis-in-a-devcontainer","text":"Danger This is experimental! Not everything will work exactly as it does on Windows. Devcontainers are a feature of Visual Studio Code that allow you to specify your development environment as a Docker container develop inside of it as if you were running the tools on your computer directly. The c4g-blis-spr22/BLIS repository has a .devcontainer configuration already specified, so you can develop BLIS on any computer that can run Docker and Visual Studio Code. Warning Although you can run BLIS in a devcontainer, this is only for development. For running a real copy of BLIS, you should still use the traditional Windows-based approach.","title":"BLIS in a Devcontainer"},{"location":"developer_documentation/blis_in_devcontainer/#prerequisites","text":"git Visual Studio Code Docker: on Mac and Windows, Docker Desktop will work","title":"Prerequisites"},{"location":"developer_documentation/blis_in_devcontainer/#instructions","text":"Clone the BLIS repository to your computer: $ git clone https://github.com/c4g-spr22-blis/BLIS.git Open the folder in Visual Studio Code A pop-up that says something like \"This folder contains a devcontainer configuration\" will appear. Click the button to open the folder in a container. If that does not appear, open the command palette (Ctrl-Shift-P or Cmd-Shift-P) and find \"Open folder in container\" and select the BLIS folder. Once the container is started, the ports should forward automatically. You can see apache2 running if you click the \"Ports\" tab on the bottom (if the bottom panel is not open, use Ctrl-` (backtick) to open it) You can then browse BLIS in your normal browser by visiting http://localhost:80 (substituting 80 for another port, depending on what port VS Code has mapped to apache2.)","title":"Instructions"},{"location":"developer_documentation/blis_on_windows/","text":"BLIS on Windows \u00b6 BLIS was originally developed to run on Windows using a discontinued project called Server2Go. This packages Apache2, MySQL, PHP, and Firefox together into a package that can be run all at once on a desktop computer. See Also Design and Implementation of a Basic Laboratory Information System for Resource-Limited Settings Server2Go - Portable Web Server This is the primary way that end-users are still using BLIS. You can still run BLIS this way to develop it. Prerequisites \u00b6 Installing command-line tools can be done with a Windows package manager such as Scoop . git Instructions \u00b6 Warning These instructions are subject to change. Clone the BLIS repository to your computer: $ git clone https://github.com/c4g-spr22-blis/BLIS.git Download the latest version of BLISRuntime.zip archive Unzip BLISRuntime.zip into the BLIS repository directory Run BLIS.exe The bundled Firefox will start and you can use BLIS normally, or make changes to files in the htdocs/ directory.","title":"BLIS on Windows"},{"location":"developer_documentation/blis_on_windows/#blis-on-windows","text":"BLIS was originally developed to run on Windows using a discontinued project called Server2Go. This packages Apache2, MySQL, PHP, and Firefox together into a package that can be run all at once on a desktop computer. See Also Design and Implementation of a Basic Laboratory Information System for Resource-Limited Settings Server2Go - Portable Web Server This is the primary way that end-users are still using BLIS. You can still run BLIS this way to develop it.","title":"BLIS on Windows"},{"location":"developer_documentation/blis_on_windows/#prerequisites","text":"Installing command-line tools can be done with a Windows package manager such as Scoop . git","title":"Prerequisites"},{"location":"developer_documentation/blis_on_windows/#instructions","text":"Warning These instructions are subject to change. Clone the BLIS repository to your computer: $ git clone https://github.com/c4g-spr22-blis/BLIS.git Download the latest version of BLISRuntime.zip archive Unzip BLISRuntime.zip into the BLIS repository directory Run BLIS.exe The bundled Firefox will start and you can use BLIS normally, or make changes to files in the htdocs/ directory.","title":"Instructions"},{"location":"developer_documentation/data-structure/","text":"Database & Backup Structure \u00b6 Notes as I look into the database and structure of the databases, and the backups generated by the \"export\" function. BLIS Default Users/passwords \u00b6 Username Password Description cameroon_dir dir123 Director's view testlab1_admin admin123 Lab admin account testlab1_tech1 tech123 Lab tech account testlab1_tech2 tech123 Lab tech account Database Dumps \u00b6 In the BLIS download from the website, the MySQL tables are prepopulated with a structure. It's not clear if this can be recreated exactly from the various SQL files available in the data/ directory. So I dumped the databases using DBeaver and here they are: blis_12 blis_127 blis_revamp I can use this to seed a container image of BLIS on Linux.","title":"Database & Backup Structure"},{"location":"developer_documentation/data-structure/#database-backup-structure","text":"Notes as I look into the database and structure of the databases, and the backups generated by the \"export\" function.","title":"Database &amp; Backup Structure"},{"location":"developer_documentation/data-structure/#blis-default-userspasswords","text":"Username Password Description cameroon_dir dir123 Director's view testlab1_admin admin123 Lab admin account testlab1_tech1 tech123 Lab tech account testlab1_tech2 tech123 Lab tech account","title":"BLIS Default Users/passwords"},{"location":"developer_documentation/data-structure/#database-dumps","text":"In the BLIS download from the website, the MySQL tables are prepopulated with a structure. It's not clear if this can be recreated exactly from the various SQL files available in the data/ directory. So I dumped the databases using DBeaver and here they are: blis_12 blis_127 blis_revamp I can use this to seed a container image of BLIS on Linux.","title":"Database Dumps"}]}